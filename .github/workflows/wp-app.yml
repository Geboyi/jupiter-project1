name: Wordpress Deployment AWS

on:
  #push and pull_request will automatically trigger workflow to run
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  #workflow_dispatch will allow for manual triggering of workflow to run
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tfpath:
        description: 'TF File Path'
        #required: false  # To ensure consistency and avoid potential issues
        #caused by missing input prior to running manually.
        #default:

jobs:
  baseinfra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # This step checks out our repository code

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7  # Adjust to latest Terraform version

      - name: Initialize, Validate and Apply Terraform
        working-directory: ./terraform/baseinfra/
        run: |
          terraform init  # Initialize Terraform configuration
          terraform validate  # Validate Terraform code
          terraform apply --auto-approve  # Apply terraform code

      - name: Notify team
        run: echo "Baseinfra workflow  run completed successfully."  #Notification

  application:
    runs-on: ubuntu-latest
    needs: baseinfra #This ensures this job runs after the baseinfra.

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # This step checks out our repository code

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7  # Adjust to latest Terraform version

      - name: Initialize, Validate and Apply Terraform
        working-directory: ./terraform/application/
        run: |
          terraform init  # Initialize Terraform configuration
          terraform validate  # Validate Terraform code
          terraform apply --auto-approve  # Apply terraform code

      - name: Notify team
        run: echo "Application workflow  run completed successfully."  #Notification

  destroy:
    runs-on: ubuntu-latest
    needs: application #this ensures this job runs after application job.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # This step checks out our repository code

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.7  # Adjust to latest Terraform version

      - name: Destroy Terraform application
        working-directory: ./terraform/application/
        run: |
          terraform init
          terraform destroy --auto-approve  # Destroy terraform code

      - name: Destroy Terraform baseinfra
        working-directory: ./terraform/baseinfra/
        run: |
          terraform init
          terraform destroy --auto-approve  # Destroy terraform code

      - name: Notify team
        run: echo "Terraform destroy run completed successfully."
